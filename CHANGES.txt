0.2.0 (unreleased)
-------------------

* exposing rate limiting
* added `async` flag to `Streamer` constructor. When set to `async=false` Streamer will block when shipping to Initial State API in order to wait for the response. 
* added a wait time based on the `Retry-After` header responded by the API when a `429` response is received 
* using Initial State API >=0.0.4

0.0.26 (unreleased)
-------------------

* bubbling up exception for 402 responses from api to be clearer.
* added a missed event log so that missed events can be put into a file instead of to std out
* FIXED: logic in 402 responses


0.0.25 (2015-02-12)
-------------------

* Entirely new to support new initial state streaming api
* api is versioned
* only one api endpiont for streaming events and creating buckets
* BREAKING: new syntax for constructor parameters: `bucket` -> `bucket_name`, `client_key` -> `access_key`
* BREAKING: `log_object` parameters: `signal_prefix` -> `key_prefix`
* BREAKING: `sessionId` is now `bucket_key` which can be configured in the Streamer constructor.


0.0.24 (2014-11-24)
-------------------

- Nothing changed yet.


0.0.23 (2014-11-21)
-------------------

- Nothing changed yet.


0.0.22 (2014-11-21)

* feature: added log_object method to allow automatically logging flat objects attributes, dicts, and lists
* feature: improved example_compute_metrics.py
* feature: added object_log_example.py
* feature: install script added check for pip version for `--pre` flag. added ability to specify wether or not to get pre-released streamer
* fix: added condition in install script to ignore using `--pre` flag when pip version is less than 1.4
* feature: added ability to override epoch timestamp via optional `epoch` parameter on `Streamer.log(signal, value[, epoch])`
* feature: added ability to override buffer size before shipping logs via optional constructor parameter `Streamer([buffer_size])`
* feature: added CHANGES.txt to repository to start documenting changes
* fix: added more status code checks to bucket creation to return more descriptive message for incorrect `client_key`